{"version":3,"sources":["components/Loading/index.jsx","components/ArrowSlide/index.jsx","containers/DetailOtherBrand/index.jsx"],"names":["Loading","className","size","ArrowSlide","to","onClick","type","aria-label","DetailOtherBrand","id","useParams","dispatch","useDispatch","useState","nav1","setNav1","nav2","setNav2","listOtherBrand","useSelector","state","product","detailotherbrand","loading","prodId","imageArr","image","title","sale","price","quantity","status","desc","description","salePrice","useEffect","getDetailOtherBrand","style","maxWidth","asNavFor","ref","c","prevArrow","nextArrow","map","item","index","src","alt","slidesToShow","length","swipeToSlide","focusOnSelect","arrows","slidesToScroll","marginRight","parseFloat","toFixed","charLimit","readMoreText","readLessText","readMoreClassName","readLessClassName","AddToCart","stock","otherbrand","disabled"],"mappings":"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","file":"static/js/19.7731525a.chunk.js","sourcesContent":["import { Spin } from 'antd'\nimport React from 'react'\nimport './index.scss'\nconst Loading = () => {\n    return (\n        <>\n            <div className=\"loading\">\n                <Spin size=\"large\" />\n            </div>\n        </>\n    )\n}\n\nexport default Loading","import { Button } from 'antd'\nimport React from 'react'\nimport { RightOutlined , LeftOutlined } from '@ant-design/icons';\nimport './index.scss'\nconst ArrowSlide =  ({className, to, onClick}) => (\n    <Button type=\"button\" onClick={onClick} className={`button-slide ${className}`} aria-label={to}>\n        { to === \"next\" ? <RightOutlined /> : <LeftOutlined />} \n    </Button>\n)\nexport default ArrowSlide\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getDetailOtherBrand } from '../../Slice/productSlice';\nimport ArrowSlide from '../../components/ArrowSlide';\nimport Loading from '../../components/Loading';\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\nimport { AddToCart } from '../../Slice/cartSlice';\nimport { Button } from 'antd';\nimport Slider from 'react-slick';\nimport './index.scss'\nfunction DetailOtherBrand() {\n    const param = useParams()\n    const id = param.id;\n    const dispatch = useDispatch()\n    const [nav1, setNav1] = useState();\n    const [nav2, setNav2] = useState();\n    const listOtherBrand = useSelector(state => state.product.detailotherbrand)\n    const loading = useSelector(state => state.product.loading)\n    const prodId = listOtherBrand.id\n    const imageArr = listOtherBrand.image\n    const title = listOtherBrand.title\n    const sale = listOtherBrand.sale\n    const price = listOtherBrand.price\n    const quantity = listOtherBrand.quantity\n    const status = listOtherBrand.status\n    let desc = listOtherBrand && listOtherBrand.description\n    const salePrice = price - sale * price\n    useEffect(() => {\n        dispatch(getDetailOtherBrand(id))\n    }, [ dispatch ,  id])\n    const handleAddToCart = () => {\n        if(sale){\n            dispatch(AddToCart({\n                id : prodId,\n                title : title,\n                price : salePrice,\n                image : imageArr,\n                stock : quantity,\n                otherbrand : true,\n                status : status\n            }))\n        }\n        else{\n            dispatch(AddToCart({\n                id : prodId,\n                title : title,\n                price : price,\n                image : imageArr,\n                stock : quantity,\n                otherbrand : true,\n                status : status\n            }))\n        }\n    }\n    return (\n        <>\n            <div className=\"detail-otherbrand\">\n                {  loading ? <Loading/> : <div className=\"container\">\n                    <div className=\"main\" style={{ maxWidth : \"100%\" }}>\n                        <div className=\"img\">\n                            <Slider \n                                asNavFor={nav2} \n                                ref={c => setNav1(c)} \n                                prevArrow = {<ArrowSlide to=\"prev\" /> }\n                                nextArrow = {<ArrowSlide to=\"next\" />}\n                            >\n                                { imageArr && imageArr.map((item , index) =>(\n                                    <div className=\"slide-img\" key={ index }>\n                                        <img src={ item } alt={ index }/>\n                                    </div>\n                                )) }\n                            </Slider>\n                            <Slider\n                                asNavFor={nav1}\n                                ref={c => setNav2(c)}\n                                slidesToShow={ imageArr && imageArr.length > 4 ? 4 : imageArr && imageArr.length }\n                                swipeToSlide={true}\n                                focusOnSelect={true}\n                                arrows={false}\n                                slidesToScroll = { 1 }\n                \n                            >\n                                { imageArr && imageArr.map((item , index) =>(\n                                    <div className=\"thumb\" key={ index }>\n                                        <img src={ item } alt={ index }/>\n                                    </div>\n                                )) }\n                            </Slider>\n                        </div>\n                        <div className=\"right-txt\">\n                            <h3 className=\"margin name\">{ title }</h3>\n                            { sale ? <div className=\"margin\">\n                                <strong>Sale : </strong><span className=\"category sale\">{ sale * 100 }%</span>\n                                </div> : null\n                            }\n                            <div className=\"margin\">\n                                <strong>Price : </strong> \n                                { sale ? \n                                    <span style={{ marginRight : \"10px\" }} className=\"category new-price\">\n                                        { parseFloat(salePrice).toFixed(2) } $\n                                    </span> : null \n                                    }\n                                <span className={sale ? \"old-price\" : \"new-price\" }>{ price } $</span>\n                            </div> \n                            \n                            {   quantity === 0 ? <div className=\"margin\"> \n                                    <span className=\"category\">Out Stock</span> \n                                </div> :\n                                <div className=\"margin\"><strong>Quantity : </strong> \n                                    <span className=\"category\">{ quantity } </span> \n                                </div>\n                            }\n\n                            <div className=\"margin\"><strong>Description :</strong> <span className=\"description\">\n                                <ReactReadMoreReadLess\n                                    charLimit={250}\n                                    readMoreText={\"Read more\"}\n                                    readLessText={\"Read less\"}\n                                    readMoreClassName=\"read-more-less--more\"\n                                    readLessClassName=\"read-more-less--less\"\n                                >\n                                    { desc ? desc : \"\" }\n                                </ReactReadMoreReadLess>\n                            </span></div>\n                            <Button type=\"primary\" onClick ={ handleAddToCart } disabled = { quantity === 0 }>\n                                Add To Cart\n                            </Button>\n                        </div>\n                    </div>\n                </div> }\n            </div>\n        </>\n    );\n}\n\nexport default DetailOtherBrand;"],"sourceRoot":""}