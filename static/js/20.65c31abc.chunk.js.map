{"version":3,"sources":["components/Loading/index.jsx","components/ArrowSlide/index.jsx","containers/DetailShoeLace/index.jsx"],"names":["Loading","className","size","ArrowSlide","to","onClick","type","aria-label","DetailShoeLace","id","useParams","dispatch","useDispatch","Option","Select","useState","nav1","setNav1","nav2","setNav2","listShoeslace","useSelector","state","product","detailshoeslace","sizeChange","setSizeChange","loading","prodId","title","imageArr","image","quantity","price","sale","status","desc","description","salePrice","useEffect","getDetailShoelace","style","maxWidth","asNavFor","ref","c","prevArrow","nextArrow","map","item","index","src","alt","slidesToShow","length","swipeToSlide","focusOnSelect","arrows","slidesToScroll","marginRight","charLimit","readMoreText","readLessText","readMoreClassName","readLessClassName","onChange","val","defaultValue","width","marginLeft","value","AddToCart","stock","shoeslace","sizeChose","disabled"],"mappings":"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","file":"static/js/20.65c31abc.chunk.js","sourcesContent":["import { Spin } from 'antd'\nimport React from 'react'\nimport './index.scss'\nconst Loading = () => {\n    return (\n        <>\n            <div className=\"loading\">\n                <Spin size=\"large\" />\n            </div>\n        </>\n    )\n}\n\nexport default Loading","import { Button } from 'antd'\nimport React from 'react'\nimport { RightOutlined , LeftOutlined } from '@ant-design/icons';\nimport './index.scss'\nconst ArrowSlide =  ({className, to, onClick}) => (\n    <Button type=\"button\" onClick={onClick} className={`button-slide ${className}`} aria-label={to}>\n        { to === \"next\" ? <RightOutlined /> : <LeftOutlined />} \n    </Button>\n)\nexport default ArrowSlide\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ArrowSlide from '../../components/ArrowSlide';\nimport Loading from '../../components/Loading';\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\nimport { AddToCart } from '../../Slice/cartSlice';\nimport { Button, Select } from 'antd';\nimport Slider from 'react-slick';\nimport { getDetailShoelace } from '../../Slice/productSlice';\nimport './index.scss'\nfunction DetailShoeLace() {\n    const param = useParams()\n    const id = param.id;\n    const dispatch = useDispatch()\n    const { Option } = Select;\n    const [nav1, setNav1] = useState();\n    const [nav2, setNav2] = useState();\n    const listShoeslace = useSelector(state => state.product.detailshoeslace)\n    const [sizeChange , setSizeChange] = useState(null)\n    const loading = useSelector(state => state.product.loading)\n    const prodId = listShoeslace.id\n    const title = listShoeslace.title\n    const imageArr = listShoeslace.image\n    const quantity = listShoeslace.quantity\n    const size = listShoeslace.size\n    const price = listShoeslace.price\n    const sale = listShoeslace.sale\n    const status = listShoeslace.status\n    let desc = listShoeslace && listShoeslace.description\n    const salePrice = price - sale * price\n    useEffect(() => {\n        dispatch(getDetailShoelace(id))\n    }, [ dispatch ,  id])\n    const handleChange = (val) => {\n        setSizeChange(val)\n    }\n    const handleAddToCart = () => {\n        if(sale){\n            dispatch(AddToCart({\n                id : prodId,\n                title : title,\n                price : salePrice,\n                image : imageArr,\n                stock : quantity,\n                shoeslace : true,\n                size : size,\n                status : status,\n                sizeChose : sizeChange || size[0],\n            }))\n        }\n        else{\n            dispatch(AddToCart({\n                id : prodId,\n                title : title,\n                price : price,\n                image : imageArr,\n                stock : quantity,\n                shoeslace : true,\n                status : status,\n                size : size,\n                sizeChose : sizeChange || size[0],\n            }))\n        }\n    }\n    return (\n        <>\n            <div className=\"detail-shoe\">\n                { loading ? <Loading/> : <div className=\"container\">\n                <div className=\"main\" style={{ maxWidth : \"100%\" }}>\n                    <div className=\"img\">\n                        <Slider \n                            asNavFor={nav2} \n                            ref={c => setNav1(c)} \n                            prevArrow = {<ArrowSlide to=\"prev\" /> }\n                            nextArrow = {<ArrowSlide to=\"next\" />}\n                        >\n                            { imageArr && imageArr.map((item , index) =>(\n                                <div className=\"slide-img\" key={ index }>\n                                    <img src={ item } alt={ index }/>\n                                </div>\n                            )) }\n                        </Slider>\n                        <Slider\n                            asNavFor={nav1}\n                            ref={c => setNav2(c)}\n                            slidesToShow={ imageArr && imageArr.length > 4 ? 4 : imageArr && imageArr.length }\n                            swipeToSlide={true}\n                            focusOnSelect={true}\n                            arrows={false}\n                            slidesToScroll = { 1 }\n            \n                        >\n                            { imageArr && imageArr.map((item , index) =>(\n                                <div className=\"thumb\" key={ index }>\n                                    <img src={ item } alt={ index }/>\n                                </div>\n                            )) }\n                        </Slider>\n                    </div>\n                    <div className=\"right-txt\">\n                        <h3 className=\"margin name\">{ title }</h3>\n                        { sale ? <div className=\"margin\">\n                            <strong>Sale : </strong><span className=\"category sale\">{ sale * 100 }%</span>\n                            </div> : null\n                        }\n                        <div className=\"margin\">\n                            <strong>Price : </strong> \n                            { sale ? \n                                <span style={{ marginRight : \"10px\" }} className=\"category new-price\">\n                                    { salePrice } $\n                                </span> : null \n                                }\n                            <span className={sale ? \"old-price\" : \"new-price\" }>{ price } $</span>\n                        </div> \n                        {   quantity === 0 ? <div className=\"margin\"> \n                                <span className=\"category\">Out Stock</span> \n                                </div> :\n                            <div className=\"margin\"><strong>Quantity : </strong> \n                                <span className=\"category\">{ quantity } </span> \n                            </div>\n                        }\n                        <div className=\"margin\">\n                            <strong>Description :</strong> \n                            <span className=\"description\">\n                                <ReactReadMoreReadLess\n                                    charLimit={250}\n                                    readMoreText={\"Read more\"}\n                                    readLessText={\"Read less\"}\n                                    readMoreClassName=\"read-more-less--more\"\n                                    readLessClassName=\"read-more-less--less\"\n                                >\n                                    { desc ? desc : \"\" }\n                                </ReactReadMoreReadLess>\n                            </span>\n                        </div>\n                        <div className=\"margin\">\n                            <Select size=\"large\" \n                                onChange={handleChange} \n                                defaultValue=\"Choose Size\"\n                                style={{ width: 200 , marginLeft : \"5px\" }}\n                            >\n                                { size && size.map(( item,index ) => (\n                                    <Option value={ item } key={ index }>{ item }</Option>\n                                )) }\n                            </Select>\n                        </div>\n                        <Button type=\"primary\" onClick ={ handleAddToCart } disabled = { quantity === 0 }>\n                            Add To Cart\n                        </Button>\n                    </div>\n                </div>\n            </div> }\n        </div>\n    </>\n    );\n}\n\nexport default DetailShoeLace;"],"sourceRoot":""}