{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/HeartOutlined.js","../node_modules/@ant-design/icons/es/icons/HeartOutlined.js","../node_modules/antd/es/alert/ErrorBoundary.js","../node_modules/antd/es/alert/index.js","../node_modules/antd/es/_util/getDataOrAriaProps.js","../node_modules/clsx/dist/clsx.m.js","../../src/utils/propValidator.ts","../../src/utils/constant.ts","../../src/utils/cssTransition.tsx","../../src/utils/collapseToast.ts","../../src/core/eventManager.ts","../../src/hooks/useKeeper.ts","../../src/hooks/toastContainerReducer.ts","../../src/hooks/useToastContainer.ts","../../src/hooks/useToast.ts","../../src/components/CloseButton.tsx","../../src/components/ProgressBar.tsx","../../src/components/Toast.tsx","../../src/components/Transitions.tsx","../../src/components/ToastContainer.tsx","../../src/core/toast.tsx","../../src/index.js"],"names":["DeleteOutlined","props","ref","React","AntdIcon","Object","assign","icon","DeleteOutlinedSvg","displayName","HeartOutlined","HeartOutlinedSvg","ErrorBoundary","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","this","apply","arguments","state","error","undefined","info","componentStack","_createClass","key","value","setState","_this$props","message","description","children","_this$state","errorMessage","toString","errorDescription","Alert","type","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","iconMapFilled","success","CheckCircleFilled","InfoCircleFilled","CloseCircleFilled","warning","ExclamationCircleFilled","iconMapOutlined","CheckCircleOutlined","InfoCircleOutlined","CloseCircleOutlined","ExclamationCircleOutlined","_a","_classNames2","customizePrefixCls","prefixCls","banner","_a$className","className","style","onMouseEnter","onMouseLeave","onClick","afterClose","showIcon","closable","closeText","action","_React$useState","_React$useState2","_slicedToArray","closed","setClosed","_React$useContext","ConfigContext","getPrefixCls","direction","handleClose","onClose","isClosable","getType","isShowIcon","alertCls","classNames","concat","_defineProperty","dataOrAriaProps","keys","reduce","prev","substr","getDataOrAriaProps","CSSMotion","visible","motionName","motionAppear","motionEnter","onLeaveStart","node","maxHeight","offsetHeight","onLeaveEnd","_ref","motionClassName","motionStyle","_extends","role","iconType","replaceElement","renderIconNode","tabIndex","CloseOutlined","toVal","mix","k","y","str","Array","isArray","tmp","x","isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","canUseDom","window","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","DARK","cssTransition","enter","exit","appendPosition","collapse","collapseDuration","position","preventExitTransition","done","nodeRef","isIn","enterClassName","exitClassName","baseClassName","useRef","animationStep","duration","height","requestAnimationFrame","setTimeout","collapseToast","useLayoutEffect","onEnter","useEffect","onExited","onExit","eventManager","list","emitQueue","on","set","event","off","cb","get","cancelEmit","timers","emit","args","timer","callback","useKeeper","arg","refresh","reducer","id","useToastContainer","forceUpdate","useReducer","toast","dispatch","containerRef","toastCount","queue","collection","instance","toastKey","displayedToast","containerId","isToastActive","getToast","limit","enableMultiContainer","appendToast","toastContent","toastProps","staleId","delay","options","updateId","isNotValid","closeToast","removeToast","isNotAnUpdate","toastAutoClose","containerAutoClose","closeButton","rtl","transition","bodyClassName","bodyStyle","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","deleteToast","queueLen","freeSlot","dequeueToast","toDequeue","removeFromCollection","cloneElement","getToastToRender","toastToRender","toastList","getX","getY","useToast","useState","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","top","bottom","left","right","pauseToast","playToast","Math","document","bindFocusEvents","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onDragTransitionEnd","CloseButton","ariaLabel","viewBox","fillRule","d","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","opacity","defaultClassName","cx","animationEvent","Toast","Transition","cssClasses","isProgressControlled","renderCloseButton","Bounce","ToastContainer","containerStyle","pointerEvents","getClassName","newestOnTop","containers","lazy","generateToastId","getToastId","dispatchToast","containerDomNode","render","mergeOptions","createToastByType","params","container","oldOptions","oldContent","nextOptions","config","containerConfig","latestInstance","containerInstance","item","useFileUpload","files","setFiles","userCallback","onChange","parsedFiles","target","file","parsedFile","source","URL","name","size","uploadFile","accept","multiple","inputEL","el","createInputComponent"],"mappings":"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","file":"static/js/22.bb7e284a.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\n\nDeleteOutlined.displayName = 'DeleteOutlined';\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","// This icon file is generated automatically.\nvar HeartOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M923 283.6a260.04 260.04 0 00-56.9-82.8 264.4 264.4 0 00-84-55.5A265.34 265.34 0 00679.7 125c-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5a258.44 258.44 0 00-56.9 82.8c-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3.1-35.3-7-69.6-20.9-101.9zM512 814.8S156 586.7 156 385.5C156 283.6 240.3 201 344.3 201c73.1 0 136.5 40.8 167.7 100.4C543.2 241.8 606.6 201 679.7 201c104 0 188.3 82.6 188.3 184.5 0 201.2-356 429.3-356 429.3z\" } }] }, \"name\": \"heart\", \"theme\": \"outlined\" };\nexport default HeartOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport HeartOutlinedSvg from \"@ant-design/icons-svg/es/asn/HeartOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar HeartOutlined = function HeartOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: HeartOutlinedSvg\n  }));\n};\n\nHeartOutlined.displayName = 'HeartOutlined';\nexport default /*#__PURE__*/React.forwardRef(HeartOutlined);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport Alert from '.';\n\nvar ErrorBoundary = /*#__PURE__*/function (_React$Component) {\n  _inherits(ErrorBoundary, _React$Component);\n\n  var _super = _createSuper(ErrorBoundary);\n\n  function ErrorBoundary() {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      error: undefined,\n      info: {\n        componentStack: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, info) {\n      this.setState({\n        error: error,\n        info: info\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          message = _this$props.message,\n          description = _this$props.description,\n          children = _this$props.children;\n      var _this$state = this.state,\n          error = _this$state.error,\n          info = _this$state.info;\n      var componentStack = info && info.componentStack ? info.componentStack : null;\n      var errorMessage = typeof message === 'undefined' ? (error || '').toString() : message;\n      var errorDescription = typeof description === 'undefined' ? componentStack : description;\n\n      if (error) {\n        return /*#__PURE__*/React.createElement(Alert, {\n          type: \"error\",\n          message: errorMessage,\n          description: /*#__PURE__*/React.createElement(\"pre\", null, errorDescription)\n        });\n      }\n\n      return children;\n    }\n  }]);\n\n  return ErrorBoundary;\n}(React.Component);\n\nexport { ErrorBoundary as default };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport CheckCircleOutlined from \"@ant-design/icons/es/icons/CheckCircleOutlined\";\nimport ExclamationCircleOutlined from \"@ant-design/icons/es/icons/ExclamationCircleOutlined\";\nimport InfoCircleOutlined from \"@ant-design/icons/es/icons/InfoCircleOutlined\";\nimport CloseCircleOutlined from \"@ant-design/icons/es/icons/CloseCircleOutlined\";\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport InfoCircleFilled from \"@ant-design/icons/es/icons/InfoCircleFilled\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport CSSMotion from 'rc-motion';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport getDataOrAriaProps from '../_util/getDataOrAriaProps';\nimport ErrorBoundary from './ErrorBoundary';\nimport { replaceElement } from '../_util/reactNode';\nvar iconMapFilled = {\n  success: CheckCircleFilled,\n  info: InfoCircleFilled,\n  error: CloseCircleFilled,\n  warning: ExclamationCircleFilled\n};\nvar iconMapOutlined = {\n  success: CheckCircleOutlined,\n  info: InfoCircleOutlined,\n  error: CloseCircleOutlined,\n  warning: ExclamationCircleOutlined\n};\n\nvar Alert = function Alert(_a) {\n  var _classNames2;\n\n  var description = _a.description,\n      customizePrefixCls = _a.prefixCls,\n      message = _a.message,\n      banner = _a.banner,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      style = _a.style,\n      onMouseEnter = _a.onMouseEnter,\n      onMouseLeave = _a.onMouseLeave,\n      onClick = _a.onClick,\n      afterClose = _a.afterClose,\n      showIcon = _a.showIcon,\n      closable = _a.closable,\n      closeText = _a.closeText,\n      action = _a.action,\n      props = __rest(_a, [\"description\", \"prefixCls\", \"message\", \"banner\", \"className\", \"style\", \"onMouseEnter\", \"onMouseLeave\", \"onClick\", \"afterClose\", \"showIcon\", \"closable\", \"closeText\", \"action\"]);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      closed = _React$useState2[0],\n      setClosed = _React$useState2[1];\n\n  var ref = React.useRef();\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('alert', customizePrefixCls);\n\n  var handleClose = function handleClose(e) {\n    var _a;\n\n    setClosed(true);\n    (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props, e);\n  };\n\n  var getType = function getType() {\n    var type = props.type;\n\n    if (type !== undefined) {\n      return type;\n    } // banner 模式默认为警告\n\n\n    return banner ? 'warning' : 'info';\n  }; // closeable when closeText is assigned\n\n\n  var isClosable = closeText ? true : closable;\n  var type = getType();\n\n  var renderIconNode = function renderIconNode() {\n    var icon = props.icon; // use outline icon in alert with description\n\n    var iconType = (description ? iconMapOutlined : iconMapFilled)[type] || null;\n\n    if (icon) {\n      return replaceElement(icon, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-icon\")\n      }, icon), function () {\n        return {\n          className: classNames(\"\".concat(prefixCls, \"-icon\"), _defineProperty({}, icon.props.className, icon.props.className))\n        };\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(iconType, {\n      className: \"\".concat(prefixCls, \"-icon\")\n    });\n  };\n\n  var renderCloseIcon = function renderCloseIcon() {\n    return isClosable ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: handleClose,\n      className: \"\".concat(prefixCls, \"-close-icon\"),\n      tabIndex: 0\n    }, closeText ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-close-text\")\n    }, closeText) : /*#__PURE__*/React.createElement(CloseOutlined, null)) : null;\n  }; // banner 模式默认有 Icon\n\n\n  var isShowIcon = banner && showIcon === undefined ? true : showIcon;\n  var alertCls = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-with-description\"), !!description), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-no-icon\"), !isShowIcon), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-banner\"), !!banner), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames2), className);\n  var dataOrAriaProps = getDataOrAriaProps(props);\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: !closed,\n    motionName: \"\".concat(prefixCls, \"-motion\"),\n    motionAppear: false,\n    motionEnter: false,\n    onLeaveStart: function onLeaveStart(node) {\n      return {\n        maxHeight: node.offsetHeight\n      };\n    },\n    onLeaveEnd: afterClose\n  }, function (_ref) {\n    var motionClassName = _ref.className,\n        motionStyle = _ref.style;\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      ref: ref,\n      \"data-show\": !closed,\n      className: classNames(alertCls, motionClassName),\n      style: _extends(_extends({}, style), motionStyle),\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onClick: onClick,\n      role: \"alert\"\n    }, dataOrAriaProps), isShowIcon ? renderIconNode() : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-content\")\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message\")\n    }, message), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-description\")\n    }, description)), action ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-action\")\n    }, action) : null, renderCloseIcon());\n  });\n};\n\nAlert.ErrorBoundary = ErrorBoundary;\nexport default Alert;","export default function getDataOrAriaProps(props) {\n  return Object.keys(props).reduce(function (prev, key) {\n    if ((key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-' || key === 'role') && key.substr(0, 7) !== 'data-__') {\n      prev[key] = props[key];\n    }\n\n    return prev;\n  }, {});\n}","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT' | 'DARK';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { ToastTransitionProps } from '../types';\n\nimport { collapseToast } from './collapseToast';\nimport { Default } from './constant';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n    }\n\n    function onEntered() {\n      const node = nodeRef.current!;\n      node.removeEventListener('animationend', onEntered);\n      if (animationStep.current === AnimationStep.Enter) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const height = node.scrollHeight;\n  const style = node.style;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof window.setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import { useRef, useEffect } from 'react';\n\n/**\n * `useKeeper` is a helper around `useRef`.\n *\n * You don't need to access the `.current`property to get the value\n * If refresh is set to true. The ref will be updated every render\n */\nexport function useKeeper<T>(arg: T, refresh = false) {\n  const ref = useRef<T>(arg);\n\n  useEffect(() => {\n    if (refresh) ref.current = arg;\n  });\n\n  return ref.current;\n}\n","import { Id } from '../types';\n\nimport { isToastIdValid } from '../utils';\n\nexport const enum ActionType {\n  ADD,\n  REMOVE\n}\nexport type State = Array<Id>;\nexport type Action =\n  | { type: ActionType.ADD; toastId: Id; staleId?: Id }\n  | { type: ActionType.REMOVE; toastId?: Id };\n\nexport function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case ActionType.ADD:\n      return [...state, action.toastId].filter(id => id !== action.staleId);\n    case ActionType.REMOVE:\n      return isToastIdValid(action.toastId)\n        ? state.filter(id => id !== action.toastId)\n        : [];\n  }\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  Direction,\n  Default\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { useKeeper } from './useKeeper';\nimport { ActionType, reducer } from './toastContainerReducer';\n\ntype CollectionItem = Record<Id, Toast>;\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toast, dispatch] = useReducer(reducer, []);\n  const containerRef = useRef(null);\n  let toastCount = useKeeper(0);\n  let queue = useKeeper<QueuedToast[]>([]);\n  const collection = useKeeper<CollectionItem>({});\n  const instance = useKeeper<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: id => collection[id] || null\n  });\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(Event.Change, toast.length, props.containerId);\n  }, [toast]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function isToastActive(id: Id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit, enableMultiContainer } = instance.props;\n    if (\n      limit &&\n      (!containerId ||\n        (instance.containerId === containerId && enableMultiContainer))\n    ) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    dispatch({ type: ActionType.REMOVE, toastId });\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } = queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid({\n    containerId,\n    toastId,\n    updateId\n  }: NotValidatedToastProps) {\n    return !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        containerId !== instance.props.containerId) ||\n      (collection[toastId] && updateId == null)\n      ? true\n      : false;\n  }\n\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = options.updateId == null;\n\n    if (isNotAnUpdate) toastCount++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent: isNum(options.draggablePercent)\n        ? options.draggablePercent\n        : (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    //  tweak for vertical dragging\n    if (\n      toastProps.draggableDirection === Direction.Y &&\n      toastProps.draggablePercent === Default.DRAGGABLE_PERCENT\n    ) {\n      (toastProps.draggablePercent as number) *= 1.5;\n    }\n\n    let closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      toastCount > props.limit &&\n      isNotAnUpdate\n    ) {\n      queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) delete collection[staleId];\n\n    collection[toastId] = {\n      content,\n      props: toastProps\n    };\n    dispatch({\n      type: ActionType.ADD,\n      toastId,\n      staleId\n    });\n  }\n\n  function removeFromCollection(toastId: Id) {\n    delete collection[toastId];\n    const queueLen = queue.length;\n    toastCount = isToastIdValid(toastId)\n      ? toastCount - 1\n      : toastCount - instance.displayedToast;\n\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\n      }\n    } else {\n      forceUpdate();\n    }\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toastToRender: ToastToRender = {};\n    const toastList = props.newestOnTop\n      ? Object.keys(collection).reverse()\n      : Object.keys(collection);\n\n    for (let i = 0; i < toastList.length; i++) {\n      const toast = collection[toastList[i]];\n      const { position } = toast.props;\n      toastToRender[position] || (toastToRender[position] = []);\n\n      toastToRender[position]!.push(toast);\n    }\n\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\n      cb(p, toastToRender[p]!)\n    );\n  }\n\n  return {\n    getToastToRender,\n    collection,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn } from '../utils';\nimport { ToastProps } from '../types';\nimport { useKeeper } from './useKeeper';\nimport { Direction } from '../utils/constant';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(true);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useKeeper<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  const syncProps = useKeeper(props, true);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      if (isFn(syncProps.onClose))\n        syncProps.onClose(\n          isValidElement(syncProps.children) && syncProps.children.props\n        );\n    };\n  }, []);\n\n  useEffect(() => {\n    props.draggable && bindDragEvents();\n    return () => {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight * (props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    if (drag.canDrag) {\n      e.preventDefault();\n\n      const toast = toastRef.current!;\n      if (isRunning) pauseToast();\n\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.delta / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    const toast = toastRef.current!;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import * as React from 'react';\nimport { Default } from '../utils';\nimport { TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n}\n\nexport function CloseButton({\n  closeToast,\n  type,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${type}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {children}\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  function getClassName(position: ToastPosition) {\n    const defaultClassName = cx(\n      `${Default.CSS_NAMESPACE}__toast-container`,\n      `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n      { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n    );\n    return isFn(className)\n      ? className({\n          position,\n          rtl,\n          defaultClassName\n        })\n      : cx(defaultClassName, parseClassName(className));\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={Default.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      {getToastToRender((position, toastList) => {\n        const containerStyle: React.CSSProperties =\n          toastList.length === 0\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n        return (\n          <div\n            className={getClassName(position)}\n            style={containerStyle}\n            key={`container-${position}`}\n          >\n            {toastList.map(({ content, props: toastProps }) => {\n              return (\n                <Toast\n                  {...toastProps}\n                  isIn={isToastActive(toastProps.toastId)}\n                  key={`toast-${toastProps.key}`}\n                  closeButton={\n                    toastProps.closeButton === true\n                      ? CloseButton\n                      : toastProps.closeButton\n                  }\n                >\n                  {content}\n                </Toast>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert'\n};\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from 'hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Check whether any container is currently mounted in the DOM\n */\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random()\n    .toString(36)\n    .substr(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nconst createToastByType = (type: string) => (\n  content: ToastContent,\n  options?: ToastOptions\n) => dispatchToast(content, mergeOptions(type, options));\n\nconst toast = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.dark = createToastByType(TYPE.DARK);\ntoast.warn = toast.warning;\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n","import React, { useState } from 'react'\n// import styles from './styles.module.css'\n\nfunction createInputComponent({ multiple, accept }) {\n  const el = document.createElement('input')\n  // set input config\n  el.type = 'file'\n  el.accept = accept\n  el.multiple = multiple\n  // return file input element\n  return el\n}\n\nexport const useFileUpload = () => {\n  const [files, setFiles] = useState(null)\n  let userCallback = () => {}\n\n  // Handle onChange event\n  const onChange = async (e) => {\n    const parsedFiles = []\n    const target = e.target\n\n    // Loop through files\n    for (const fileIndex in target.files) {\n      // check if index is a number\n      if (isNaN(fileIndex)) {\n        continue\n      }\n\n      // get file object\n      const file = target.files[fileIndex]\n\n      // select properties\n\n      const parsedFile = {\n        source: URL.createObjectURL(file),\n        name: file.name,\n        size: file.size,\n        file // original file object\n      }\n\n      // add to parsed file list\n      parsedFiles.push(parsedFile)\n    }\n\n    // remove event listener after operation\n    target.removeEventListener('change', onChange)\n\n    // remove input element after operation\n    target.remove()\n\n    // update files state hook\n\n    if (target.multiple) {\n      setFiles(parsedFiles)\n      return userCallback(parsedFiles)\n    }\n\n    setFiles(parsedFiles[0])\n    return userCallback(parsedFiles[0])\n\n    // user specified callback\n  }\n\n  // Handle upload\n  const uploadFile = (\n    { accept, multiple } = { accept: '', multiple: false },\n    cb\n  ) => {\n    if (typeof cb === 'function') {\n      userCallback = cb\n    }\n    // create virtual input element\n    const inputEL = createInputComponent({ multiple, accept })\n    // add event listener\n    inputEL.addEventListener('change', onChange)\n    inputEL.click()\n  }\n\n  return React.useMemo(() => [files, uploadFile], [files])\n}\n"],"sourceRoot":""}